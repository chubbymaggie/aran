0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/iojs', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.11.0
3 info using node@v2.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/soft/Desktop/workspace/aran',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/soft/.npm/aran/1.0.6/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/soft/.npm/aran/1.0.6/package.tgz',
9 verbose tar pack   '/Users/soft/Desktop/workspace/aran' ]
10 verbose tarball /Users/soft/.npm/aran/1.0.6/package.tgz
11 verbose folder /Users/soft/Desktop/workspace/aran
12 info prepublish aran@1.0.6
13 verbose addLocalTarball adding from inside cache /Users/soft/.npm/aran/1.0.6/package.tgz
14 silly cache afterAdd aran@1.0.6
15 verbose afterAdd /Users/soft/.npm/aran/1.0.6/package/package.json not in flight; writing
16 verbose afterAdd /Users/soft/.npm/aran/1.0.6/package/package.json written
17 silly publish { name: 'aran',
17 silly publish   description: 'Aran is JavaScript instrumenter for building dynamic analysis tools',
17 silly publish   version: '1.0.6',
17 silly publish   author: { name: 'Laurent Christophe', email: 'lachrist@vub.ac.be' },
17 silly publish   repository: { type: 'git', url: 'git+https://github.com/lachrist/aran.git' },
17 silly publish   homepage: 'http://github.com/lachrist/aran',
17 silly publish   license: 'MIT',
17 silly publish   dependencies: { esprima: '*', otiluke: '*' },
17 silly publish   files: [ 'instrument.js', 'main.js', 'traps.js' ],
17 silly publish   main: 'main.js',
17 silly publish   keywords:
17 silly publish    [ 'JavaScript',
17 silly publish      'Instrumentation',
17 silly publish      'Sandboxing',
17 silly publish      'Monitoring',
17 silly publish      'Tracing',
17 silly publish      'Shadow Execution',
17 silly publish      'ECMAScript5' ],
17 silly publish   readme: '# Aran <img src="aran.png" align="right" alt="aran-logo" title="Aran Linvail"/>\n\nAran is a npm module for instrumenting JavaScript code which enables amongst other things: profiling, tracing, sandboxing, and symbolic execution.\nAran performs a source-to-source code transformation fully compatible with [ECMAScript5](http://www.ecma-international.org/ecma-262/5.1/) and we are working toward supporting [ECMAScript6](http://www.ecma-international.org/ecma-262/6.0/).\nTo install, run `npm install aran`.\n\n## Demonstration\n\nIn Aran, an analysis consists in a set of syntactic traps that will be triggered while the program under scrutiny is being executed.\nFor instance, the expression `x + y` may be transformed into `aran.binary(\'+\', x, y)` which triggers the `binary` trap.\nBelow we demonstrate how to analyze a monolithic - as opposed to modularized - JavaScript program using Aran.\n\n1. The file `target.js` is a monolithic JavaScript program that we are interested to analyze:\n\n  ```javascript\n  // target.js //\n  function delta (a, b, c) { return  b * b - 4 * a * c}\n  function solve (a, b, c) {\n    var s1 = ((-b) + Math.sqrt(delta(a, b, c))) / (2 * a);\n    var s2 = ((-b) - Math.sqrt(delta(a, b, c))) / (2 * a);\n    return [s1, s2];\n  }\n  solve(1, -5, 6);\n  ```\n\n2. The file `analysis.js` provides an implementation of the traps `Ast` and `apply`.\n   These traps are written into the global value arbitrarily named `__hidden__`.\n   The function `search`, is used to fetch the AST node responsible of triggering the `apply` traps.\n\n  ```javascript\n  // apply-analysis.js //\n  var __hidden__ = {};\n  (function () {\n    var program;\n    __hidden__.Ast = function (ast, url) {\n      console.log("Executing " + url);\n      program = ast;\n    };\n    __hidden__.apply = function (fct, ths, args, idx) {\n      var num = search(program, idx).loc.start.line;\n      console.log("Apply " + fct.name + " at line " + num);\n      return fct.apply(ths, args);\n    };\n    function search (ast, idx) {\n      var tmp;\n      if (typeof ast !== "object" || ast === null)\n        return;\n      if (ast.bounds && idx === ast.bounds[0])\n        return ast;\n      if (ast.bounds && (idx < ast.bounds[0] || idx > ast.bounds[1]))\n        return;\n      for (var k in ast)\n        if (tmp = search(ast[k], idx))\n          return tmp;\n    }\n  } ());\n  ```\n\n3. The file `main.js` creates `__target__.js` as the concatenation of the analysis and the instrumented target code:\n\n  ```javascript\n  // main.js //\n  var fs = require(\'fs\');\n  var Aran = require(\'aran\');\n  var analysis = fs.readFileSync(__dirname+\'/apply-analysis.js\', {encoding:\'utf8\'});\n  var target = fs.readFileSync(__dirname+\'/target.js\', {encoding:\'utf8\'});\n  var aran = Aran({namespace:\'__hidden__\', traps:[\'Ast\',\'apply\'], loc:true});\n  var instrumented = aran(target, \'an-optional-script-locator\');\n  fs.writeFileSync(__dirname+\'/__target__.js\', analysis+\'\\n\'+instrumented);\n  ```\n\nIn ECMAScript5-compatible environments, executing `__target__.js` will produce the following log: \n\n```\nExecuting an-optional-script-locator\nApply solve at line 8\nApply delta at line 4\nApply sqrt at line 4\nApply delta at line 5\nApply sqrt at line 5\n```\n\nMonolithic JavaScript programs can also be analyzed through Aran\'s [demo page](http://rawgit.com/lachrist/aran/master/glitterdust/demo.html).\nIn the demo page, the global value holding the traps has to be named `aran` and trap names are deduced from inspecting this global value.\nNote that this is possible only because the instrumentation phase and execution/analysis phase happen on the same process.\n\n<img src="demo.png" align="center" alt="demo-screenshot" title="Aran\'s demonstration page"/>\n\n## API\n\nThis section details Aran\'s instrumentation API.\nThe top-level function exported by this node module expects the set of options below:\n\n Option     | Default                               | Value\n------------|---------------------------------------|---------------------------------------------------------------------------------------------------------------------\n`namespace` | `\'aran\'`                              | String, the name of the global value containing Aran\'s traps\n`traps`     | `[]`                                  | Array, contains the names of the traps to be called later, during the execution phase\n`analysis`  | `undefined`                           | String, JavaScript code implementing the traps named in the `traps` option\n`filter`    | `function (url)`<br>`{ return true }` | Function, called with the url of a JavaScript resource to decide whether to instrument it\n`port`      | `undefined`                           | Number, a port to setup an MITM HTTP proxy for intercepting and instrumenting traffic of JavaScript code\n`main`      | `undefined`                           | String, a path to the main file of a node program, the bundled instrumented code is sent to the `stdout` \n`loc`       | `false`                               | Boolean, if true: ast node have line and column-based location info [cf esprima](http://esprima.org/doc/index.html)\n`range`     | `false`                               | Boolean, if true: ast node have an index-based location range [cf esprima](http://esprima.org/doc/index.html)\n\nIf `analysis` is not defined, the top-level function returns an instrumentation function expecting two arguments: the code to instrument and an optional script locator that will be passed to the trap `Ast` -- as demonstrated above.\nIf `analysis` is defined, Aran will try to cope with one of the two module systems below.\nFor more information, please refer to [Otiluke\'s readme](https://github.com/lachrist/otiluke)\n\n1. If `port` is defined, HTML pages: an MITM proxy will be deployed intercepting and instrumenting traffic of JavaScript code.\n   Note that this requires to tell your browser to direct his requests to the corresponding local port and to trust the root certificate of [Otiluke](https://github.com/lachrist/otiluke).\n\n```javascript\nvar fs = require(\'fs\');\nvar Aran = require(\'aran\');\nAran({\n  namespace: \'__hidden__\',\n  traps: [\'Ast\', \'apply\'],\n  analysis: fs.readFileSync(\'./apply-analysis.js\', {encoding:\'utf8\'}),\n  filter: function (url) { return url.indexOf("my-host.com") !== -1 }, \n  port: null,\n  main: \'absolute/path/to/main.js\',\n  loc: true,\n  range: false\n});\n```\n\n2. If `main` is defined, node requires: the bundled instrumented program is streamed into `stdout`.\n\n```javascript\nvar fs = require(\'fs\');\nvar Aran = require(\'aran\');\nAran({\n  namespace: \'__hidden__\',\n  traps: [\'Ast\', \'apply\'],\n  analysis: fs.readFileSync(\'./apply-analysis.js\', {encoding:\'utf8\'}),\n  filter: function (url) { return url.indexOf("my-module") !== -1 },\n  port: 8080,\n  main: null,\n  loc: true,\n  range: false\n});\n```\n\n## Traps\n\nThe below table introduces by example the set of traps Aran can insert.\nTraps starting with a upper-case letter are simple observers and their return values are never used while the value returned by lower-case traps may be used inside expressions.\nAll traps are independently optional and they all receive as last argument an integer which is the index of the AST node that triggered the trap.\nThe only exception to this rule is the `Ast` trap which is always triggered first and receives instead an url locating the instrumented JavaScript resource.\nThe first argument given to the `Ast` trap is an [esprima](http://esprima.org) tree whose statement and expression nodes contain a `bounds` field.\n`bounds[0]` is the node index; all of the node children have their index greater than `bounds[0]` and lesser or equal than `bounds[1]`.\nThis enables to search a node at a given index in `log(ast-size)` as shown in the demonstration section. \nIn the table below, `123` is used as a dummy index.\n\n Traps                              | Target              | Instrumented\n------------------------------------|---------------------|-------------------------------------------------------\n**General**                         |                     |\n`Ast(ast, url)`                     |                     |\n`Strict(index)`                     | `\'use strict\';`     | `\'use strict\';`<br>`aran.Strict(123);`\n`literal(value, index)`             | `\'foo\'`             | `aran.literal(\'foo\', 123)`\n`unary(op, value, index)`           | `!x`                | `aran.unary(\'!\', x, 123)`\n`binary(op, left, right, index)`    | `x + y`             | `aran.binary(\'+\', x, y, 123)`\n**Environment**                     |                     |\n`Declare(kind, variables, index)`   | `var x = 1, y;`     | `aran.Declare(\'var\', [x,y], 123);`<br>`var x = 1, y;`\n`read(variable, value, index)`      | `x`                 | `aran.read(\'x\', x, 123)` |\n`write(variable, old, new, index)`  | `x = y`             | `aran.write(\'x\', x, y, 123)`\n`Enter(index)`<br>`Leave(index)`    | `{ ... }`           | `{`<br>&nbsp;&nbsp;`aran.Enter(123);`<br>&nbsp;&nbsp;`...`<br>&nbsp;&nbsp;`aran.Leave(123);`<br>`}`\n**Apply**                           |                     |\n`apply(fct, this, args, index)`     | `f(x,y)`            | `aran.apply(f, aran.g, [x,y], 123)`\n`construct(fct, args, index)`       | `new F(x,y)`        | `aran.construct(F, [x,y], 123)`\n`Arguments(value, index)`           | `function ...`      | `... aran.Arguments(arguments, 123)... `\n`return(value, index)`              | `return x;`         | `return aran.return(x, 123);`\n`eval(args, index)`                 | `eval(x, y)`        | `... eval(aran.eval([x,y], 123))... `\n**Object**                          |                     |\n`get(object, key, index)`           | `o.k`               | `aran.get(o, \'k\', 123)` \n`set(object, key, value, index)`    | `o.k = x`           | `aran.set(o, \'k\', x, 123)`\n`delete(object, key, index)`        | `delete o.k`        | `aran.delete(o, \'k\', 123)`\n`enumerate(object, index)`          | `for (k in o) ...`  | `... aran.enumerate(o, 123) ...`\n**Control**                         |                     |\n`test(value, index)`                | `if (x) ...`        | `if (aran.test(x, 123)) ...`\n`Label(label, index)`               | `l: { ... };`       | `aran.Label(\'l\', 123);`<br>`l: { ... };`\n`Break(label, index)`               | `break l;`          | `aran.Break(\'l\', 123);`<br>`break l;`\n`throw(error, index)`               | `throw x;`          | `throw aran.throw(x, 123);`\n`Try(index)`<br>`catch(error, index)`<br>`Finally(index)` | `try {`<br>&nbsp;&nbsp;`...`<br>`} catch (e) {`<br>&nbsp;&nbsp;`...`<br>`} finally {`<br>&nbsp;&nbsp;`...`<br>`}` | `try { `<br>&nbsp;&nbsp;`aran.Try(123);`<br>&nbsp;&nbsp;`...`<br>`} catch (e) {`<br>&nbsp;&nbsp;`e = aran.catch(e, 123);`<br>&nbsp;&nbsp;`...`<br>`} finally {`<br>&nbsp;&nbsp;`aran.Finally(123);`<br>&nbsp;&nbsp;`..`<br>`}`\n\nThe below table depicts which traps are susceptible to be inserted for every [AST node type](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API).\nTo further investigate how traps are inserted, please try it out in Aran\'s [demo page](http://rawgit.com/lachrist/aran/master/glitterdust/demo.html).\n\n                         |`Ast`|`Strict`|`literal`|`unary`|`binary`|`Declare`|`read`|`write`|`Enter`|`Leave`|`apply`|`construct`|`Arguments`|`return`|`eval`|`get`|`set`|`delete`|`enumerate`|`test`|`Label`|`Break`|`throw`|`Try`|`catch`|`Finally`\n-------------------------|:---:|:------:|:-------:|:-----:|:------:|:-------:|:----:|:-----:|:-----:|:-----:|:-----:|:---------:|:---------:|:------:|:----:|:---:|:---:|:------:|:---------:|:----:|:-----:|:-----:|:-----:|:---:|:-----:|:-------:\n`Program`                | X   | X      |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`EmptyStatement`         |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`BlockStatement`         |     |        |         |       |        |         |      |       | X     | X     |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ExpressionStatement`    |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`IfStatement`            |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`LabeledStatement`       |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      | X     |       |       |     |       |         \n`BreakStatement`         |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       | X     |       |     |       |         \n`ContinueStatement`      |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`WithStatement`          |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`SwitchStatement`        |     |        |         |       | X      |         |      |       | X     | X     |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ReturnStatement`        |     |        |         |       |        |         |      |       |       |       |       |           |           | X      |      |     |     |        |           |      |       |       |       |     |       |         \n`ThrowStatement`         |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       | X     |     |       |         \n`TryStatement`           |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       | X   | X     | X       \n`WhileStatement`         |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`DoWhileStatement`       |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ForStatement`           |     |        |         |       |        | X       |      |       | X     | X     |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ForInStatement`         |     |        |         |       |        | X       |      | X     | X     | X     |       |           |           |        |      |     | X   |        | X         |      |       |       |       |     |       |         \n`DebuggerStatement`      |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`FunctionDeclaration`    |     | X      |         |       |        | X       |      | X     |       |       |       |           | X         |        |      |     |     |        |           |      |       |       |       |     |       |         \n`VariableDeclaration`    |     |        |         |       |        | X       |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ThisExpression`         |     |        |         |       |        |         | X    |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ArrayExpression`        |     |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ObjectExpression`       |     |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`FunctionExpression`     |     | X      |         |       |        |         |      |       |       |       |       |           | X         |        |      |     |     |        |           |      |       |       |       |     |       |         \n`SequenceExpression`     |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`UnaryExpression`        |     |        |         | X     |        |         |      |       |       |       |       |           |           |        |      |     |     | X      |           |      |       |       |       |     |       |         \n`BinaryExpression`       |     |        |         |       | X      |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`AssignmentExpression`   |     |        |         |       | X      |         | X    | X     |       |       |       |           |           |        |      | X   | X   |        |           |      |       |       |       |     |       |         \n`UpdateExpression`       |     |        | X       |       | X      |         | X    | X     |       |       |       |           |           |        |      | X   | X   |        |           |      |       |       |       |     |       |         \n`LogicalExpression`      |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ConditionalExpression`  |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`NewExpression`          |     |        |         |       |        |         |      |       |       |       |       | X         |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`CallExpression`         |     |        |         |       |        |         | X    |       |       |       | X     |           |           |        | X    | X   |     |        |           |      |       |       |       |     |       |         \n`MemberExpression`       |     |        |         |       |        |         |      |       |       |       |       |           |           |        |      | X   |     |        |           |      |       |       |       |     |       |         \n`Identifier`             |     |        |         |       |        |         | X    |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`Literal`                |     |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n\nWe finish this section by discussing the global value holding traps during the execution/analysis phase.\nIt is the responsibility of the user to make sure that the target code does not interact with it by choosing an appropriate global name or by adding proper guards to traps such as `read`, `write` and `enumerate`.\nSuch interaction should be avoided because it would alter the original behavior of the target code and the conclusion drawn during the analysis might be falsified.\n\n## Supported ECMAScript6 Features\n\n* Block scoping [let && const](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/let)\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '0bbd711ad3478815c3e11a31d34b2e18786d56fe',
17 silly publish   bugs: { url: 'https://github.com/lachrist/aran/issues' },
17 silly publish   _id: 'aran@1.0.6',
17 silly publish   scripts: {},
17 silly publish   _shasum: 'b9244f0416761a9089dd7b47c25fbcf2dd3095d5',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name aran
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/aran
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/soft/.npm/aran/1.0.6/package.tgz
25 verbose request uri https://registry.npmjs.org/aran
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 11:12:33
28 verbose request using bearer token for auth
29 verbose request id bf54eace27545904
30 http request PUT https://registry.npmjs.org/aran
31 http 403 https://registry.npmjs.org/aran
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Tue, 02 Feb 2016 10:12:36 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-ams4145-AMS',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1454407953.775404,VS0,VE2620' }
33 verbose request invalidating /Users/soft/.npm/registry.npmjs.org/aran on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 1.0.6." : aran
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:368:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1219:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1167:12)
35 verbose stack     at emitNone (events.js:72:20)
36 verbose statusCode 403
37 verbose pkgid aran
38 verbose cwd /Users/soft/Desktop/workspace/aran
39 error Darwin 14.5.0
40 error argv "/usr/local/bin/iojs" "/usr/local/bin/npm" "publish"
41 error node v2.2.1
42 error npm  v2.11.0
43 error code E403
44 error "You cannot publish over the previously published version 1.0.6." : aran
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
