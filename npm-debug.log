0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.8.6
3 info using node@v6.1.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/soft/Desktop/workspace/aran',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/soft/.npm/aran/1.2.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/soft/.npm correctMkdir not in flight; initializing
10 info lifecycle aran@1.2.0~prepublish: aran@1.2.0
11 silly lifecycle aran@1.2.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/soft/.npm/aran/1.2.0/package.tgz',
12 verbose tar pack   '/Users/soft/Desktop/workspace/aran' ]
13 verbose tarball /Users/soft/.npm/aran/1.2.0/package.tgz
14 verbose folder /Users/soft/Desktop/workspace/aran
15 verbose addLocalTarball adding from inside cache /Users/soft/.npm/aran/1.2.0/package.tgz
16 verbose correctMkdir /Users/soft/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd aran@1.2.0
18 verbose afterAdd /Users/soft/.npm/aran/1.2.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/soft/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/soft/.npm/aran/1.2.0/package/package.json written
21 silly publish { name: 'aran',
21 silly publish   description: 'Aran is JavaScript instrumenter for building dynamic analysis tools',
21 silly publish   version: '1.2.0',
21 silly publish   author: { name: 'Laurent Christophe', email: 'lachrist@vub.ac.be' },
21 silly publish   repository: { type: 'git', url: 'git+https://github.com/lachrist/aran.git' },
21 silly publish   homepage: 'http://github.com/lachrist/aran',
21 silly publish   license: 'MIT',
21 silly publish   dependencies: { esprima: '2.7.x' },
21 silly publish   files: [ 'instrument.js', 'main.js', 'traps.js' ],
21 silly publish   main: 'main.js',
21 silly publish   keywords:
21 silly publish    [ 'JavaScript',
21 silly publish      'Instrumentation',
21 silly publish      'Dynamic Analysis',
21 silly publish      'Sandboxing',
21 silly publish      'Monitoring',
21 silly publish      'Tracing',
21 silly publish      'Shadow Execution',
21 silly publish      'ECMAScript5' ],
21 silly publish   readme: '# Aran <img src="readme/aran.png" align="right" alt="aran-logo" title="Aran Linvail"/>\n\nAran is a npm module for instrumenting JavaScript code which enables amongst other things: profiling, tracing, sandboxing, and symbolic execution.\nAran performs a source-to-source code transformation fully compatible with [ECMAScript5](http://www.ecma-international.org/ecma-262/5.1/) and we are working toward supporting [ECMAScript6](http://www.ecma-international.org/ecma-262/6.0/).\nTo install, run `npm install aran`.\n\n## Demonstration\n\nIn Aran, an analysis consists in a set of syntactic traps that will be triggered while the program under scrutiny is being executed.\nFor instance, the expression `x + y` may be transformed into `aran.binary(\'+\', x, y)` which triggers the `binary` trap.\nThe best way to get familiar with Aran is by toying with its [demo page](http://rawgit.com/lachrist/aran/master/analyses/demo.html).\nThe target editor expects a JavaScript program to analyze while the master editor expects a script exporting an instrumentation function.\n\n<img src="readme/demo.png" align="center" alt="demo-screenshot" title="Aran\'s demonstration page"/>\n\n## Usage\n\n```javascript\nvar Aran = require("aran");\nvar aran = Aran({\n  namespace: unusedGlobalName,\n  traps: trapNames,\n  loc: isLoCNeeded,\n  range: isRangeNeeded\n});\nvar instrumentedCode = aran.instrument(jsCode, source);\nvar maybeNode = aran.node(nodeIndex);\nvar maybeSource = aran.source(nodeIndex);\n```\n\nThe top level function of this module understands the below set of options and returns an object with two functions.\nThe `instrument` function parses the given string as JavaScript code, indexes every AST node, store the entire AST, assign the root\'s parent and return the instrumented code.\nThe `search` function looks up for an AST node at the given index within the previously parsed scripts.\n\n Option     | Default  | Value\n------------|----------|---------------------------------------------------------------------------------------------------------------------\n`namespace` | `"aran"` | String, the name of the global value containing Aran\'s traps\n`traps`     | `[]`     | Array, contains the names of the traps to be called later, during the execution phase\n`loc`       | `false`  | Boolean, if true: ast node have line and column-based location info [cf esprima](http://esprima.org/doc/index.html)\n`range`     | `false`  | Boolean, if true: ast node have an index-based location range [cf esprima](http://esprima.org/doc/index.html)\n\nTo demonstrate how to use Aran we propose to log the function calls inside a program solving: `x^2 - 5*x + 6 = 0`.\nBecause Aran is fully written in JavaScript, the instrumentation can happen on the same process as the JavaScript program being analyzed.\nIn that case we say that the instrumentation is online.\nBy opposition, we refer to offline instrumentation when the instrumentation happens on a separate process.\nThree different use examples are provided in this repository:\n\n1. [Offline monolithic instrumentation](usage/offline-monolithic)\n2. [Online monolithic instrumentation](usage/online-monolithic)\n3. [Online modular instrumentation](usage/online-modular)\n\nNote that if the program under analysis accesses the global variable holding the Aran\'s traps terrible things will happen.\nFirst it could break the analysis by modifying the traps. \nSecond, more subtly, it changes the behavior of the program under analysis and the conclusion drawn during the analysis may not hold for the program alone.\nThe most straight forward way to prevent this to happen is to pick an extravagant name for this global variable.\nHowever it is not a complete solution because the program under analysis may still access it by listing the property of the global object.\nA complete solution can be obtained by controlling the access to the global object with the traps `read`, `write`, `enumerate` and `apply`.\n\n## Traps\n\nThe below table introduces by example the set of traps Aran can insert.\nTraps starting with a upper-case letter are simple observers and their return values are never used while the value returned by lower-case traps may be used inside expressions.\nAll traps are independently optional and they all receive as last argument an integer which is the index of the AST node that triggered the trap.\nThe AST node at a given index can be retrieved using `aran.search(index)`.\nIn the table below, `123` is used as a dummy index.\n\n Traps                              | Target              | Instrumented\n------------------------------------|---------------------|-------------------------------------------------------\n**General**                         |                     |\n`Program(index)`                    | ...                 | `aran.Program(123); ...`\n`Strict(index)`                     | `\'use strict\';`     | `\'use strict\';`<br>`aran.Strict(123);`\n`literal(value, index)`             | `\'foo\'`             | `aran.literal(\'foo\', 123)`\n`unary(op, value, index)`           | `!x`                | `aran.unary(\'!\', x, 123)`\n`binary(op, left, right, index)`    | `x + y`             | `aran.binary(\'+\', x, y, 123)`\n**Environment**                     |                     |\n`Declare(kind, variables, index)`   | `var x = 1, y;`     | `aran.Declare(\'var\', [x,y], 123);`<br>`var x = 1, y;`\n`read(variable, value, index)`      | `x`                 | `aran.read(\'x\', x, 123)` |\n`write(variable, old, new, index)`  | `x = y`             | `aran.write(\'x\', x, y, 123)`\n`Enter(index)`<br>`Leave(index)`    | `{ ... }`           | `{`<br>&nbsp;&nbsp;`aran.Enter(123);`<br>&nbsp;&nbsp;`...`<br>&nbsp;&nbsp;`aran.Leave(123);`<br>`}`\n**Apply**                           |                     |\n`apply(fct, this, args, index)`     | `f(x,y)`            | `aran.apply(f, aran.g, [x,y], 123)`\n`construct(fct, args, index)`       | `new F(x,y)`        | `aran.construct(F, [x,y], 123)`\n`Arguments(value, index)`           | `function ...`      | `... aran.Arguments(arguments, 123)... `\n`return(value, index)`              | `return x;`         | `return aran.return(x, 123);`\n`eval(args, index)`                 | `eval(x, y)`        | `... eval(aran.eval([x,y], 123))... `\n**Object**                          |                     |\n`get(object, key, index)`           | `o.k`               | `aran.get(o, \'k\', 123)` \n`set(object, key, value, index)`    | `o.k = x`           | `aran.set(o, \'k\', x, 123)`\n`delete(object, key, index)`        | `delete o.k`        | `aran.delete(o, \'k\', 123)`\n`enumerate(object, index)`          | `for (k in o) ...`  | `... aran.enumerate(o, 123) ...`\n**Control**                         |                     |\n`test(value, index)`                | `if (x) ...`        | `if (aran.test(x, 123)) ...`\n`Label(label, index)`               | `l: { ... };`       | `aran.Label(\'l\', 123);`<br>`l: { ... };`\n`Break(label, index)`               | `break l;`          | `aran.Break(\'l\', 123);`<br>`break l;`\n`throw(error, index)`               | `throw x;`          | `throw aran.throw(x, 123);`\n`Try(index)`<br>`catch(error, index)`<br>`Finally(index)` | `try {`<br>&nbsp;&nbsp;`...`<br>`} catch (e) {`<br>&nbsp;&nbsp;`...`<br>`} finally {`<br>&nbsp;&nbsp;`...`<br>`}` | `try { `<br>&nbsp;&nbsp;`aran.Try(123);`<br>&nbsp;&nbsp;`...`<br>`} catch (e) {`<br>&nbsp;&nbsp;`e = aran.catch(e, 123);`<br>&nbsp;&nbsp;`...`<br>`} finally {`<br>&nbsp;&nbsp;`aran.Finally(123);`<br>&nbsp;&nbsp;`..`<br>`}`\n`sequence`                          | `(x, y, z)`         | `aran.sequence([x, y, z], 123)`\n`Expression`                        | x;                  | `aran.Expression(x);`\n\nThe below table depicts which traps are susceptible to be inserted for every [AST node type](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API).\nTo further investigate how traps are inserted, please try it out in Aran\'s [demo page](http://rawgit.com/lachrist/aran/master/glitterdust/demo.html).\n\n                         |`Strict`|`literal`|`unary`|`binary`|`Declare`|`read`|`write`|`Enter`|`Leave`|`apply`|`construct`|`Arguments`|`return`|`eval`|`get`|`set`|`delete`|`enumerate`|`test`|`Label`|`Break`|`throw`|`Try`|`catch`|`Finally`\n-------------------------|:------:|:-------:|:-----:|:------:|:-------:|:----:|:-----:|:-----:|:-----:|:-----:|:---------:|:---------:|:------:|:----:|:---:|:---:|:------:|:---------:|:----:|:-----:|:-----:|:-----:|:---:|:-----:|:-------:\n`EmptyStatement`         |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`BlockStatement`         |        |         |       |        |         |      |       | X     | X     |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ExpressionStatement`    |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`IfStatement`            |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`LabeledStatement`       |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      | X     |       |       |     |       |         \n`BreakStatement`         |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       | X     |       |     |       |         \n`ContinueStatement`      |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`WithStatement`          |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`SwitchStatement`        |        |         |       | X      |         |      |       | X     | X     |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ReturnStatement`        |        |         |       |        |         |      |       |       |       |       |           |           | X      |      |     |     |        |           |      |       |       |       |     |       |         \n`ThrowStatement`         |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       | X     |     |       |         \n`TryStatement`           |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       | X   | X     | X       \n`WhileStatement`         |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`DoWhileStatement`       |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ForStatement`           |        |         |       |        | X       |      |       | X     | X     |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ForInStatement`         |        |         |       |        | X       |      | X     | X     | X     |       |           |           |        |      |     | X   |        | X         |      |       |       |       |     |       |         \n`DebuggerStatement`      |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`FunctionDeclaration`    | X      | X       |       |        | X       |      | X     |       |       |       |           | X         |        |      |     |     |        |           |      |       |       |       |     |       |         \n`VariableDeclaration`    |        |         |       |        | X       |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ThisExpression`         |        |         |       |        |         | X    |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ArrayExpression`        |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`ObjectExpression`       |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`FunctionExpression`     | X      | X       |       |        |         |      |       |       |       |       |           | X         |        |      |     |     |        |           |      |       |       |       |     |       |         \n`SequenceExpression`     |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`UnaryExpression`        |        |         | X     |        |         |      |       |       |       |       |           |           |        |      |     |     | X      |           |      |       |       |       |     |       |         \n`BinaryExpression`       |        |         |       | X      |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`AssignmentExpression`   |        |         |       | X      |         | X    | X     |       |       |       |           |           |        |      | X   | X   |        |           |      |       |       |       |     |       |         \n`UpdateExpression`       |        | X       |       | X      |         | X    | X     |       |       |       |           |           |        |      | X   | X   |        |           |      |       |       |       |     |       |         \n`LogicalExpression`      |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`ConditionalExpression`  |        |         |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           | X    |       |       |       |     |       |         \n`NewExpression`          |        |         |       |        |         |      |       |       |       |       | X         |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`CallExpression`         |        |         |       |        |         | X    |       |       |       | X     |           |           |        | X    | X   |     |        |           |      |       |       |       |     |       |         \n`MemberExpression`       |        |         |       |        |         |      |       |       |       |       |           |           |        |      | X   |     |        |           |      |       |       |       |     |       |         \n`Identifier`             |        |         |       |        |         | X    |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n`Literal`                |        | X       |       |        |         |      |       |       |       |       |           |           |        |      |     |     |        |           |      |       |       |       |     |       |         \n\n## Supported ECMAScript6 Features\n\n* Block scoping [let && const](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/let)\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'cdb7b6122c360db8d32387e30e0a7a585a43ee58',
21 silly publish   bugs: { url: 'https://github.com/lachrist/aran/issues' },
21 silly publish   _id: 'aran@1.2.0',
21 silly publish   scripts: {},
21 silly publish   _shasum: '230a07f783ee4c505458ec478f2103a033f30be7',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name aran
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'aran',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   name: 'aran',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/aran
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/soft/.npm/aran/1.2.0/package.tgz
30 verbose request uri https://registry.npmjs.org/aran
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 4:57:38 PM
33 verbose request using bearer token for auth
34 verbose request id 1edd4fe611a5b5ec
35 http request PUT https://registry.npmjs.org/aran
36 http 403 https://registry.npmjs.org/aran
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 09 Jun 2016 14:57:39 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-ams4122-AMS',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1465484258.358815,VS0,VE1304',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/soft/.npm/registry.npmjs.org/aran on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.2.0." : aran
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:199:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1036:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:963:12)
41 verbose statusCode 403
42 verbose pkgid aran
43 verbose cwd /Users/soft/Desktop/workspace/aran
44 error Darwin 14.5.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.1.0
47 error npm  v3.8.6
48 error code E403
49 error "You cannot publish over the previously published version 1.2.0." : aran
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
